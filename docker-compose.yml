version: '2.1'
services:
  zookeeper:
    image: debezium/zookeeper:1.0
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888

  kafka:
    image: debezium/kafka:1.0
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181

  account-db:
    image: debezium/postgres:11
    ports:
     - 5433:5432
    healthcheck:
      test: "pg_isready -U postgresuser -d accountdb"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
     - POSTGRES_USER=postgresuser
     - POSTGRES_PASSWORD=postgrespw
     - POSTGRES_DB=accountdb
     - PGPASSWORD=postgrespw

  connect:
    image: debezium/connect:1.0
    ports:
     - 8083:8083
     - 5005:5005
    links:
     - kafka
     - account-db
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_source_connect_configs
     - OFFSET_STORAGE_TOPIC=my_source_connect_offsets
     - STATUS_STORAGE_TOPIC=my_source_connect_statuses
     - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
     - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
     - KAFKA_DEBUG=true
     - DEBUG_SUSPEND_FLAG=n

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx100M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"

  account-service:
    build:
      context: account-service
    ports:
     - 8080:8080
    links:
     - kafka
     - account-db

  event-service:
    build:
      context: event-service
    ports:
     - 8081:8081
    links:
     - kafka
     - account-db
